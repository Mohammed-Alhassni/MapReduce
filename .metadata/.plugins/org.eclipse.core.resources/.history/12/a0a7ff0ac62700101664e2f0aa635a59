import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

public class BlocksExtractor {

    public static ArrayList<ArrayList<String>> extractBlocks(String samplePath) throws IOException {
        BufferedReader reader = new BufferedReader(new FileReader(samplePath));
        ArrayList<ArrayList<String>> allBlocks = new ArrayList<>();
        ArrayList<String> TempData = new ArrayList<>();
        String line;
        boolean isForDistrubtion = false;

        while ((line = reader.readLine()) != null) {
            if (!line.trim().isEmpty()) { // Check for non-empty lines

                // Start of a new block, add the previous one if needed
                if (line.contains("class ") && !TempData.isEmpty()) {
                    allBlocks.add(new ArrayList<>(TempData));
                    TempData.clear(); // Clear TempData for the next block
                }

                if (line.contains("class ")) {
                    TempData.add(line); // Start collecting a new block
                } else if (line.contains("Distribution:")) {
                    isForDistrubtion = true; // Mark the distribution section
                }

                // Add lines to TempData
                if (!line.contains("Distribution:") && isForDistrubtion) {
                    TempData.add(line);
                    isForDistrubtion = false; // Reset after adding distribution line
                }
            }
        }
        // Add any remaining block after the loop ends
        if (!TempData.isEmpty()) {
            allBlocks.add(new ArrayList<>(TempData));
        }

        reader.close();
        return allBlocks;
    }
}
